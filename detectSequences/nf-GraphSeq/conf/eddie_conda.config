/*
 * ------------------------------------------------------
 *  Based on the nf-core/rnaseq Nextflow base config file
 * ------------------------------------------------------
 */

executor{
  name = "uge"
  queueSize = 500
  cpu = 1
  memory = 8.GB
  time = 23.h
}

process {

  beforeScript = """
  . /etc/profile.d/modules.sh
  module load anaconda/5.3.1
  module load singularity
  module load roslin/gcc
  sleep 2;
  """
  penv = "sharedmem"

  cpus = 1
  memory = 8.GB
  time = 6.h

  errorStrategy = { task.exitStatus in [143,137,104,134,139,140] ? 'retry' : 'terminate' }
  maxRetries = 5
  maxErrors = '-1'

  withLabel: small{
    cpus = 1
    memory = { 4.GB * task.attempt }
    time = {6.h * task.attempt }
    clusterOptions = { "-P roslin_ctlgh -l h_vmem=${task.memory.toString().replaceAll(/[\sB]/,'')}" }
  }
  withLabel: medium{
    cpus = 1
    memory = { 16.GB * task.attempt }
    time = { 12.h * task.attempt }
    clusterOptions = { "-P roslin_ctlgh -l h_vmem=${task.memory.toString().replaceAll(/[\sB]/,'')}" }
  }
  withLabel: medium_multi{
    cpus = 4
    memory = { 16.GB * task.attempt }
    time = { 12.h * task.attempt }
    clusterOptions = { "-P roslin_ctlgh -l h_vmem=${task.memory.toString().replaceAll(/[\sB]/,'')}" }
  }
  withLabel: vep{
    cpus = 4
    memory = { 16.GB * task.attempt }
    time = { 12.h * task.attempt }
    clusterOptions = { "-P roslin_ctlgh -l h_vmem=${task.memory.toString().replaceAll(/[\sB]/,'')}" }
  }
  withLabel: large{
    cpus = 4
    memory = { 32.GB * task.attempt }
    time = { 23.h * task.attempt }
    clusterOptions = { "-P roslin_ctlgh -l h_vmem=${task.memory.toString().replaceAll(/[\sB]/,'')}" }
  }
  withLabel: largemem{
    cpus = 1
    memory = { 64.GB * task.attempt }
    time = { 23.h * task.attempt }
    clusterOptions = { "-P roslin_ctlgh -l h_vmem=${task.memory.toString().replaceAll(/[\sB]/,'')}" }
  }
  withLabel: compile{
    cpus = 4
    memory = { 4.GB * task.attempt }
    time = {4.h * task.attempt }
    clusterOptions = { "-P roslin_ctlgh -l h_vmem=${task.memory.toString().replaceAll(/[\sB]/,'')}" }
  }
}